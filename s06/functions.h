//functions.h
//Lastname:Firstname:A00123456:u00
//Submission 06
//Gathering Odds and Evens

#ifndef FUNCTIONS_H
#define FUNCTIONS_H

void DisplayProgramInfo();
/**<
Displays a single screen of program information and usage, with a
pause at the end.
*/

void SeedRandomGeneratorIfRequired
(
    int seedValue,           //in
    RandomGenerator& randGen //inout
);
/**<
Seeds a random generator, or not, depending on the seed value.
@param seedValue The seed value to be used for "re-seeding" the
random generator if this is to be done.
@param randGen The random generator.
@pre seedValue has been initialized and is >= 0.
@post randGen is unchanged if seedValue == 0; otherwise randGen
has been "re-seeded" (reset) using seedValue as the seed.
*/

void GenerateRandomValues
(
    RandomGenerator& randGen, //inout
    deque<int>& theDeque,     //inout
    list<int>& theList        //inout
);
/**<
Uses randGen to generate a randomly chosen number of positive
integers and places them into the deque and the list. For each
container, the number of values placed in it is a randomly chosen
value from the range 10..15. The values themselves are also
randomly chosen, in this case from the range 10..99.
@param randGen The random generator
@param theDeque The deque for holding the first group of 10 to 15
randomly generated positive integers
@param theList The list for holding the second group of 10 to 15
randomly generated positive integers
@pre
- randGen has been initialized.
- theDeque has been initialized, and may or may not be empty.
- theList has been initialized, and may or may not be empty.
@post
- theDeque contains the 10 to 15 values from the range 10..99
randomly generated by the function, and no other values.
- theList contains the 10 to 15 values from the range 10..99
randomly generated by the function, and no other values.
*/

void GatherOddsInDequeEvensInList1
(
    deque<int>& theDeque, //inout
    list<int>& theList    //inout
);
/**<
Arranges theDeque and theList so that all odd values from either
are (uniquely) in theDeque, and all even values from both are
(again uniquely) in theList.
@param theDeque The deque of 10 to 15 values from 10..99.
@param theList The list of 10 to 15 values from 10..99.
@pre theDeque and theList have been initialized, and each contains
10 to 15 poistive integer values from the range 10..99.
@post
- theDeque contains all odd integer values from theDeque and theList,
in ascending order.
- theList contains all even integer values from theDeque and theList,
in descending order.
- In each container, the values are unique (that is, duplicates have
been removed).
*/

void GatherOddsInDequeEvensInList2
(
    deque<int>& theDeque, //inout
    list<int>& theList    //inout
);
/**<
Arranges theDeque and theList so that all odd values from either
are (uniquely) in theDeque, and all even values from both are
(again uniquely) in theList.
@param theDeque The deque of 10 to 15 values from 10..99.
@param theList The list of 10 to 15 values from 10..99.
@pre theDeque and theList have been initialized, and each contains
10 to 15 poistive integer values from the range 10..99.
@post
- theDeque contains all odd integer values from theDeque and theList,
in ascending order.
- theList contains all even integer values from theDeque and theList,
in descending order.
- In each container, the values are unique (that is, duplicates have
been removed).
*/

void DisplayContentsOfDequeAndList
(
    const deque<int>& theDeque, //in
    const list<int>& theList    //in
);
/**<
Displays the contents of both theDeque and theList.
@param theDeque A deque of positive integer values
@param theList  A list of positive integer values
@pre
- theDeque has been initialized and contains from 0 to 30 integer
values from the range 10..99.
- theList has been initialized and contains from 0 to 30 integer
values from the range 10..99.
@post
The values in theDeque and theList have been displayed in the
format which is illustrated below, between the dashed lines:
-------------------------------------------------------------------------
                1  2  3  4  5  6  7  8  9 10 11
For the deque: 89 33 48 50 72 34 18 63 29 10 45
For the list:  72 37 93 17 89 80 92 43 29 19
-------------------------------------------------------------------------
*/

#endif
